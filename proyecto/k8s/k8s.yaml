apiVersion: v1
kind: Namespace
metadata:
  name: proyecto-app

---
# ------------------------------
# Deployment
# ------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proyecto-app-deployment
  namespace: proyecto-app
  labels:
    app: proyecto-app
spec:
  replicas: 2   # Ajusta según la carga que esperes
  selector:
    matchLabels:
      app: proyecto-app
  template:
    metadata:
      labels:
        app: proyecto-app
    spec:
      containers:
        - name: proyecto-app
          image: proyecto-app:latest      # Usa tu imagen local existente
          imagePullPolicy: IfNotPresent   # No descarga si ya existe localmente
          ports:
            - containerPort: 8080         # Puerto interno de tu app
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
            failureThreshold: 5
          resources:
            requests:
              cpu: "100m"
              memory: "200Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"

---
# ------------------------------
# Service
# ------------------------------
apiVersion: v1
kind: Service
metadata:
  name: proyecto-app-service
  namespace: proyecto-app
spec:
  selector:
    app: proyecto-app
  ports:
    - protocol: TCP
      port: 80           # Puerto que expone el service
      targetPort: 8080   # Puerto interno donde corre tu app
  type: ClusterIP

---
# ------------------------------
# Ingress
# ------------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proyecto-app-ingress
  namespace: proyecto-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: public   # Cambia según tu cluster (MicroK8s suele ser "public")
  rules:
    - host: ""               # Déjalo vacío si no tienes dominio, usará la IP del cluster
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: proyecto-app-service
                port:
                  number: 80